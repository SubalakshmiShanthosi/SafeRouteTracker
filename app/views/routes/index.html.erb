<form role="form" class="form-inline">
  <div class="form-group">
    <label for="from" class="col-sm-2 control-label">From</label>
    <div class="col-sm-10">
      <%= collection_select(:location, 0, Location.all, :name, :name) %>
    </div>
  </div>
  <div class="form-group">
    <label for="to" class="col-sm-2 control-label">To</label>
    <div class="col-sm-10">
      <%= collection_select(:location, 1, Location.all, :name, :name) %>
    </div>
  </div>

  <div class="form-group">
    <div class="col-sm-10">
      <input type="button"class="btn btn-primary" value="Show Pollution" id="showPollution" />
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-10">
      <input type="button" class="btn btn-primary" value="Toggle view of traffic levels" id="showTrafficLevels" />
    </div>
  </div>
</form>
<div id="map" style="width:800px; height:800px"></div>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyAoxCtn64wOaq5cGB5qcgGZnP_YhSKosJQ"></script>
<script>
    document.addEventListener("DOMContentLoaded", function(event) {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: {lat: 13.0011774, lng: 80.2564957}
        });
        var path;
        var marker;
        var trafficLayer, toggle = false;
        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer({
            polylineOptions: {
                strokeColor: "black"
            }
        });

        function addMarkerWithTimeout(lat, long, title, color) {
            return new Promise(function(resolve, reject) {
                window.setTimeout(function(){
                    resolve(new google.maps.Marker({
                        position: new google.maps.LatLng(lat, long),
                        map: map,
                        animation: google.maps.Animation.DROP,
                        label: title,
                        strokeColor: color,
                        strokeOpacity: 1.0,
                        strokeWeight: 2
                    }));
                }, 2*300);
            })
                    .then(function(value) {
                        return value;
                    });
        }


        function updatePollutionLevels(){
            console.log('hi');
            $.get('/routes/air_quality', function (data) {
                console.log(data);
                data.forEach(function(pollutionInfo){
                    var strokeColor = pollutionInfo.status === 'ok' ? "yellow" : "blue";
                    addMarkerWithTimeout(pollutionInfo.latitude.to_f,pollutionInfo.longitude.to_f, pollutionInfo.value.to_s, strokeColor);
                });
            });
        }

        function updateTraficLayer(){
            if (!toggle){
                trafficLayer = new google.maps.TrafficLayer();
                trafficLayer.setMap(map);
            }

            else{
                trafficLayer.setMap(null);
            }
            toggle = !toggle
        }

        function showSafetyAndTrafficMap() {
            var points = [];
            from = !!document.getElementById('location_0').value ? document.getElementById('location_0').value : 'thiruvanmiyur';
            to = !!document.getElementById('location_1').value ? document.getElementById('location_1').value : 'tambaram';
            if(path)
                path.setMap(null);
            $.get('/routes/safe_path?from=' + from + '&to=' + to, function (data) {

                path = new google.maps.Polyline({
                    path: data,
                    geodesic: true,
                    strokeColor: '#FF0000',
                    strokeOpacity: 1.0,
                    strokeWeight: 2
                });

                path.setMap(map);
            });
        }


        function initMap() {
            showSafetyAndTrafficMap();

        }
        var fromOption = document.getElementById("location_0");
        fromOption.addEventListener("change", showSafetyAndTrafficMap, false);
        var toOption = document.getElementById("location_1");
        toOption.addEventListener("change", showSafetyAndTrafficMap, false);
        document.getElementById("showPollution").addEventListener("click", updatePollutionLevels, false);
        document.getElementById("showTrafficLevels").addEventListener("click", updateTraficLayer, false);
//        google.maps.event.addDomListener(window, 'load', initialize);

    });
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAoxCtn64wOaq5cGB5qcgGZnP_YhSKosJQ&callback=initMap"/>